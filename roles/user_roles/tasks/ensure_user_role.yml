---
# This play will create the POC specific roles in Satellite that we need.
#
# satgroup-administrator will map to the Satellite admins group and administrator (all privileges) role
# satgroup-compliance-auditor will need to view OSCAP Policy and Reports maps to Compliance Viewer
# satgroup-compliance-manager will need to view, edit and upload OSCAP Policy and view Reports - maps to Compliance Viewer
# satgroup-content-manager will need to manage subscriptions, repositories, products, content views, life cycles, errata, and containers
# satgroup-org-administrator maps to Manager role
# satgroup-site-administrator maps to Site Manager role
# satgroup-sub-manager needs to see Red Hat Subscriptions and Manifests
#
# satgroup-operator - combines a number of roles - BootStrap_User, Remote Execution User, Task Manager, Edit Hosts, Discovery Manager, Viewer
# For the POC we only need to create the Operator Role

- name: "Ensure the role state for - {{ satellite_role.name }}"  # noqa: args[module] ansible linter does not like our perfectly reasonable value
  redhat.satellite.role:
    username: "{{ satellite_username | default(omit) }}"
    password: "{{ satellite_password | default(omit) }}"
    use_gssapi: "{{ satellite_use_gssapi | default(omit) }}"
    server_url: "{{ satellite_url }}"
    validate_certs: "{{ satellite_validate_certs }}"
    state: "{{ satellite_role.state }}"
    name: "{{ satellite_role.name }}"
    description: "{{ satellite_role.description | default(omit) }}"
    locations: "{{ satellite_role.locations | default(omit) }}"
    organizations: "{{ satellite_role.organizations | default(omit) }}"
    filters: "{{ satellite_role.filters | ansible.utils.remove_keys(target=['resource_type']) | default(omit) }}"
